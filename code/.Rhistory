base <- swipe_user %>%
group_by(user_id, swipe_number)
# remove inf and na
card.user <- cardStats(base)
card.user[is.na(card.user)] <- 0
card.user[sapply(card.user, is.infinite)] <- 0
card <- card.user[,-c(1,2)]
# cols.not.zero <-names(
#   which(colSums(card) > 0)
# )
#
# card <- card[cols.not.zero]
return(card)
}
set.seed(42)
ids <- sample(ids_completed)
suppressMessages(library(e1071))
results.self <- data.frame(
section = integer(),
id = integer(),
acc = double()
)
row <- 1
sections.model <- 5
for (id in ids){
for (s in c(1:2)){
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
pca.user <- pcaData(card)
user.model <- svm(pca.user$x, y = NULL,
type = 'one-classification',
#kernel = 'radial'
gamma = 10^-7
)
swipe.user.test <- swipe.user[
swipe.user$action_number == (sections.model + s) ]
card.test <- getCard(swipe.user.test)
project.test <- predict(pca.user, card.test)
# classifier
test.result <- predict(user.model, project.test,
probability = TRUE)
acc <- mean(test.result)
section <- sections.model + s
row.value <- c(section, id, acc)
results.self[row,] <- row.value
row <- row + 1
}
}
nrow(results.self[results.self$acc> 0.5,])/
nrow(results.self)
View(swipe)
View(card)
id
results.self <- data.frame(
section = integer(),
id = integer(),
acc = double()
)
row <- 1
sections.model <- 5
for (id in ids){
for (s in c(1:2)){
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
pca.user <- pcaData(card)
user.model <- svm(pca.user$x, y = NULL,
type = 'one-classification',
kernel = 'radial',
gamma = 10^-7
)
swipe.user.test <- swipe.user[
swipe.user$action_number == (sections.model + s) ]
card.test <- getCard(swipe.user.test)
project.test <- predict(pca.user, card.test)
# classifier
test.result <- predict(user.model, project.test,
probability = TRUE)
acc <- mean(test.result)
section <- sections.model + s
row.value <- c(section, id, acc)
results.self[row,] <- row.value
row <- row + 1
}
}
nrow(results.self[results.self$acc> 0.5,])/
nrow(results.self)
View(card)
ids
id
swipe.user
swipe.user.train
View(swipe.user.train)
card
View(card)
View(swipe.user.train)
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
View(card)
View(swipe.user.train)
swipe_user
swipe_user <- swipe.user.train
swipe_user
View(swipe_user)
swipe_user[,c(6:16)] <- lapply(
swipe_user[,c(6:16)], scale)
swipe.user.train
swipe_user
swipe.user.train
names(swipe_user)
swipe.user.train
ncol(swipe_user)
getCard
swipe.user
swipe_user <-swipe.user
n.col <- ncol(swipe_user)
# scale
swipe_user[,n.col] <- lapply(
swipe_user[,n.col], scale)
n.col
swipe_user[,n.col] <- lapply(
swipe_user[,n.col], scale)
n.col <- ncol(swipe_user)
# scale
swipe_user[,c(6:n.col)] <- lapply(
swipe_user[,c(6:n.col)], scale)
swipe_user
swipe_user
swipe.user
swipe_user <- swipe.user
swipe_user
n.col <- ncol(swipe_user)
# scale
swipe_user[,c(6:n.col)] <- lapply(
swipe_user[,c(6:n.col)], scale)
swipe_user
swipe_user
swipe.user
swipe_user[,c(6:n.col)]
swipe_user[,c(6:n.col)] <- lapply(
swipe_user[,c(6:n.col)], scale)
swipe_user
scale(swipe_user[,c(6:n.col)])
swipe_user <- swipe.user[,c(6:n.col)]
swipe_user
swipe.user[,c(6:n.col)]
swipe.user
swipe.user[,c(6:n.col)]
c(6:n.col)
swipe.user
swipe.user[,c(6:n.col)]
swipe.user[c(6:n.col),]
swipe.user[,c(6:n.col)]
swipe.user[,..c(6:n.col)]
c(6:n.col)
vet <- c(6:n.col)
vet
swipe.user[,vet]
swipe.user[,..vet]
View(swipe)
swipe_user <- swipe.user[,..vet]
swipe_user
scale(swipe_user)
scale(as.matrix(swipe_user))
scale(swipe_user)
swipe_user <- scale(swipe_user)
View(swipe_user)
base <- swipe_user %>%
group_by(user_id, swipe_number)
swipe_user <- swipe.user[,..vet]
swipe_user
scale(swipe.user[,..vet])
swipe.user[,..vet] <- scale(swipe.user[,..vet])
vet <- c(6:n.col)
swipe.user[,..vet] <- scale(swipe.user[,..vet])
swipe.user
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
swipe.user.train
swipe.user.train
swipe.user.train[, c(1,2)]
n.col <- ncol(swipe.user.train)
swipe.user.train[, c(6:n.col)
swipe.user.train[, c(6:n.col)
n.col <- ncol(swipe.user.train)
swipe.user.train[, c(6:n.col)]
swipe.user.train
swipe.user.train[, c(6:n.col)]
swipe.user.train[, as.array(c(6:n.col))]
n.col
swipe.user.train[, as.array(c(6,7,8,9,10,11,12,13))]
swipe.user.train[, c(6,7,8,9,10,11,12,13)]
n.col
swipe.user.train[, c(6,7,8,9,10,11,12,13,14,15,16 )]
swipe.user.train[, c(6,7,8,9,10,11,12,13,14,15,16,17,18)]
swipe_user <- swipe.user.train
swipe_user
swipe_user[,c(6,7,8,9,10,11,12,13,14,15,16,17,18)] <-
scale(swipe_user[,c(6,7,8,9,10,11,12,13,14,15,16,17,18)])
scale(swipe_user[,c(6,7,8,9,10,11,12,13,14,15,16,17,18)])
swipe_user
swipe_user %>%
scale
swipe_user %>%
select(c(6,7,8,9,10,11,12,13,14,15,16,17,18)) %>%
scale
swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled
swipe.user.train
swipe_user.scaled
swipe_user
scale(swipe_user)
swipe_user.scaled
bind_cols(swipe_user.scaled, swipe_user(1:6))
swipe_user[,c(1:6)]
swipe_user.scaled <- bind_cols(swipe_user.scaled, swipe_user[,c(1:5)])
swipe_user.scaled
getCard <- function(swipe_user){
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled, swipe_user[,c(1:5)])
base <- swipe_user.scaled %>%
group_by(user_id, swipe_number)
# remove inf and na
card.user <- cardStats(base)
card.user[is.na(card.user)] <- 0
card.user[sapply(card.user, is.infinite)] <- 0
card <- card.user[,-c(1,2)]
# cols.not.zero <-names(
#   which(colSums(card) > 0)
# )
#
# card <- card[cols.not.zero]
return(card)
}
results.self <- data.frame(
section = integer(),
id = integer(),
acc = double()
)
row <- 1
sections.model <- 5
for (id in ids){
for (s in c(1:2)){
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
pca.user <- pcaData(card)
user.model <- svm(pca.user$x, y = NULL,
type = 'one-classification',
#kernel = 'radial',
gamma = 10^-7
)
swipe.user.test <- swipe.user[
swipe.user$action_number == (sections.model + s) ]
card.test <- getCard(swipe.user.test)
project.test <- predict(pca.user, card.test)
# classifier
test.result <- predict(user.model, project.test,
probability = TRUE)
acc <- mean(test.result)
section <- sections.model + s
row.value <- c(section, id, acc)
results.self[row,] <- row.value
row <- row + 1
}
}
nrow(results.self[results.self$acc> 0.5,])/
nrow(results.self)
card
swipe.user.train
card
View(swipe_user)
View(swipe.user.train)
card
View(card)
card
swipe_user <- swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe.user.train
swipe_user
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled, swipe_user[,c(1:5)])
swipe_user.scaled
View(swipe_user.scaled)
swipe_user.scaled <- bind_cols(swipe_user.scaled, swipe_user[,c(1:5)])
swipe_user.scaled
View(swipe_user.scaled)
View(swipe.user.train)
names(swipe_user[,c(1:5)])
swipe_user <- swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)],
.name_repair = names(swipe_user[,c(1:5)])
)
swipe_user.scaled
swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
names(swipe_user[,c(1:5)])
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)])
swipe_user.scaled[,c(1:5)]
swipe_user.scaled[,c(6:ncol(swipe_user.scaled))]
ncols <- ncol(swipe_user.scaled)
swipe_user.scaled[,c(6:ncols)]
swipe_user.scaled[,c(6:8)]
ncols
ncols[0]
integer(ncols)
ncols[0]
ncols[1]
swipe_user.scaled[,c(6:ncols[1])]
ncols
ncols <- ncol(swipe_user.scaled)
ncols
ncols[1]
ncols[3]
a <- 0
a
ncols
swipe_user.scaled[,c(6:18)]
swipe_user.scaled[,c(14:18)]
c(c(14:18), c(1,13))
c(c(14:18), c(1:13))
swipe_user.scaled[,c(c(14:18), c(1:13))]
swipe_user.scaled
swipe_user <- swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)])
swipe_user.scaled <- swipe_user.scaled[,c(c(14:18), c(1:13))]
swipe_user.scaled
swipe_user <- swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled
swipe_user <- swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)])
swipe_user.scaled <- swipe_user.scaled[,c(c(14:18), c(1:13))]
base <- swipe_user.scaled %>%
group_by(user_id, swipe_number)
card.user <- cardStats(base)
card.user[is.na(card.user)] <- 0
card.user[sapply(card.user, is.infinite)] <- 0
View(card.user)
card <- card.user[,-c(1,2)]
View(card)
swipe.user.train
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)])
swipe_user.scaled <- swipe_user.scaled[,c(c(14:18), c(1:13))]
getCard <- function(swipe_user){
swipe_user.scaled <- swipe_user %>%
select(c(6:18)) %>%
scale
swipe_user.scaled <- bind_cols(swipe_user.scaled,
swipe_user[,c(1:5)])
swipe_user.scaled <- swipe_user.scaled[,c(c(14:18), c(1:13))]
base <- swipe_user.scaled %>%
group_by(user_id, swipe_number)
# remove inf and na
card.user <- cardStats(base)
card.user[is.na(card.user)] <- 0
card.user[sapply(card.user, is.infinite)] <- 0
card <- card.user[,-c(1,2)]
# cols.not.zero <-names(
#   which(colSums(card) > 0)
# )
#
# card <- card[cols.not.zero]
return(card)
}
results.self <- data.frame(
section = integer(),
id = integer(),
acc = double()
)
row <- 1
sections.model <- 5
for (id in ids){
for (s in c(1:2)){
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
pca.user <- pcaData(card)
user.model <- svm(pca.user$x, y = NULL,
type = 'one-classification',
#kernel = 'radial',
gamma = 10^-7
)
swipe.user.test <- swipe.user[
swipe.user$action_number == (sections.model + s) ]
card.test <- getCard(swipe.user.test)
project.test <- predict(pca.user, card.test)
# classifier
test.result <- predict(user.model, project.test,
probability = TRUE)
acc <- mean(test.result)
section <- sections.model + s
row.value <- c(section, id, acc)
results.self[row,] <- row.value
row <- row + 1
}
}
nrow(results.self[results.self$acc> 0.5,])/
nrow(results.self)
swipe.user <- swipe[swipe$user_id == id]
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
card <- getCard(swipe.user.train)
pca.user <- pcaData(card)
View(pca.user)
View(swipe.user)
View(swipe_user)
View(swipe.user.train)
View(card)
unique(swipe.user.train$action_number)
View(swipe.user.train)
unique(swipe.user.train$swipe_number)
length(unique(swipe.user.train$swipe_number))
unique(swipe.user)
unique(swipe.user$swipe_number)
length(unique(swipe.user.train$swipe_number))
length(unique(swipe.user$swipe_number))
length(unique(swipe.user.train$swipe_number))
length(unique(swipe.user.train$swipe_number))
unique(swipe.user.train$swipe_number)
unique(swipe.user.train$swipe_number)
sections.model
(s -1)
(sections.model + s)
swipe.user
unique(swipe.user.train$swipe_number)
View(swipe.user)
View(swipe_user)
swipe.user <- swipe[swipe$user_id == id]
View(swipe_user)
id
View(swipe)
swipe.user <- swipe[swipe$user_id == id]
View(swipe_user)
swipe.user <- swipe[swipe$user_id == id,]
View(swipe_user)
id
View(swipe)
swipe[swipe$user_id == id,]
swipe.user <- swipe[swipe$user_id == id,]
swipe.user
swipe.user.train <- swipe.user %>%
filter(action_number > (s -1),
action_number < (sections.model + s))
View(swipe.user.train)
swipe.user.train
card <- getCard(swipe.user.train)
card
pca.user <- pcaData(card)
pca.user
View(pca.user)
View(card)
View(pca.user)
View(project.test)
View(pca.user$x)
5 + ""
paste(5 , "a")
paste(5, "a", sep = '')
for (id in ids){
swipe.user <- swipe[swipe$user_id == id,]
card <- getCard(swipe.user.train)
name.file <- paste('card', id, sep = '')
write.csv(card, name.file)
}
